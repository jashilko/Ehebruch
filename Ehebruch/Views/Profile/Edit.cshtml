@model Ehebruch.Models.Account.UserProfile
 
@{
    Layout = "~/Views/Shared/_LayoutBoot3.cshtml";
}

<div class="row" ng-app="purchaseApp" ng-controller="purchaseController">
    <div class="col-md-12">
        @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", name="reviewForm", novalidate = ""}))
        {
            <h4>Заполните свой профиль</h4>
            <hr />
            @Html.ValidationSummary()

            <div class="form-group">
                <div class="col-md-3">
                    @{
                        string path = "~/Files/" + Model.AvatarPath;
                        string absolutePath = Server.MapPath(path);
                        if (!File.Exists(absolutePath) && (Model.sex))
                        {
                            path = "../../Files/avatars/einman.jpg";
                        }
                        else if (!File.Exists(absolutePath) && (!Model.sex))
                        {
                            path = "../../Files/avatars/einefrau.jpg";
                        }
                        else
                        {
                            path = "../../Files/" + Model.AvatarPath;                        
                        }
                        <img src="@path" class="img-responsive" />
                    }
                    <input type="file" id="error" name="error"  />
                </div>
                <div class="col-md-9">
                    @Html.LabelFor(m => m.About, new { @class = "control-label" })
                    @Html.TextAreaFor(m => m.About, new {@class = "form-control" }) 
                    <br>
                    @Html.LabelFor(m => m.MyIdeal, new { @class = "control-label" })
                    @Html.TextAreaFor(m => m.MyIdeal, new {@class = "form-control"}) 
                </div>
            </div>
            
            
            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(m => m.CountryId, new { @class = "col-md-2 control-label" })
                    @Html.DropDownListFor(m => m.CountryId, ViewBag.Country as SelectList, new { id = "country", @class = "col-md-2 form-control" })
                </div>  
                <div class="col-md-4">
                    @Html.LabelFor(m => m.RegionId, new { @class = "col-md-2 control-label" })
                    @Html.DropDownListFor(m => m.RegionId, ViewBag.Region as SelectList, new { id = "region", @class = "form-control" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(m => m.CityId, new { @class = "col-md-2 control-label" })
                    @Html.DropDownListFor(m => m.CityId, ViewBag.City as SelectList, new { id = "sity", @class = "form-control" })
                </div>
            </div>
   
            
            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.sex, new { @class = "col-md-2 control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.sex, new[]   { new SelectListItem() { Text = "Мужской", Value = "true" }, 
                        new SelectListItem() { Text = "Женский", Value = "false" }}, new { @class = "form-control" })  
                    </div>                   
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.height, new { @class = "col-md-2 control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.height,
                        new SelectList(
                            Enumerable.Range(150, 250).Select(x => new { Value = x, Text = x }),
                            "Value",
                            "Text"),
                        new { @class = "form-control" })  
                    </div>                          
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.weight, new { @class = "col-md-1 control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.weight,
                        new SelectList(
                            Enumerable.Range(50, 150).Select(x => new { Value = x, Text = x }),
                            "Value",
                            "Text"),
                        new { @class = "form-control" })  
                    </div>                          
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Age, new { @class = "col-md-1 control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(model => model.Age,
                        new SelectList(
                            Enumerable.Range(18, 100).Select(x => new { Value = x, Text = x }),
                            "Value",
                            "Text"),
                        new { @class = "form-control" })  
                    </div>                          
                </div>
            </div>  

            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.FigureId, new { @class = "col-md-2 control-label" })
                    @Html.DropDownList("FigureId", ViewBag.Figure as SelectList, "Выберите", new { id = "FigureId", @class = "form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.AlcoholId, new { @class = "col-md-2 control-label" })
                    @Html.DropDownList("AlcoholId", ViewBag.Alcohol as SelectList, "Выберите", new { id = "AlcoholId", @class = "form-control" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.SmokingId, new { @class = "col-md-2 control-label" })
                    @Html.DropDownList("SmokingId", ViewBag.Smoking as SelectList, "Выберите", new { id = "SmokingId", @class = "form-control" })
                </div>
            </div>            
            
            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.wish, new { @class = "col-md-2 control-label" })
                    <br>
                    <div class="checkbox" ng-repeat="wish in wishs">
                        <input type="checkbox" value="{{wish.Id}}" ng-click="updateQuestionValue(wish)" ng-model="wish.Checked" name="selectedwishes" id="{{wish.Id}}" ng-required="value.length==0" />{{wish.Name}} <br />
                    </div>
                    <strong style="color:red" ng-model="textt" ng-show ="value.length < 1">Выберите хотя бы одно желание</strong>
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(m => m.Languages, new { @class = "col-md-2 control-label" })
                    <br>
                    <div class="checkbox">
                         @foreach (KeyValuePair<string, int> c in ViewBag.LangList)
                         {
                                    <input type="checkbox" name="selectedlang" value="@c.Value" @(Model.Languages.Where(d => d.Id == c.Value).FirstOrDefault() != null ? "checked=\"checked\"" : "") />@c.Key <br />
                         }                    
                    </div>
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(m => m.Excitements, new { @class = "control-label" })
                    <br>
                    <div class="checkbox">
                         @foreach (KeyValuePair<string, int> c in ViewBag.ExcitList)
                         {
                                    <input type="checkbox" name="selectedexcit" value="@c.Value" @(Model.Excitements.Where(d => d.Id == c.Value).FirstOrDefault() != null ? "checked=\"checked\"" : "")/>@c.Key <br />
                         }                    
                    </div>
                    
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(m => m.Whatpartners, new { @class = "control-label" })
                    <br>
                    <div class="checkbox">
                         @foreach (KeyValuePair<string, int> c in ViewBag.Whatpart)
                         {
                                    <input type="checkbox" name="selectedwhatpart" value="@c.Value" @(Model.Whatpartners.Where(d => d.Id == c.Value).FirstOrDefault() != null ? "checked=\"checked\"" : "")/>@c.Key <br />
                         }                    
                    </div>
                </div>

                
                
            </div>  
            
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" ng-model="but" class="btn btn-default" value="Сохранить" ng-disabled="value.length < 1" />
                </div>
            </div>                           
            
            
        }


    </div>
</div>

@section Scripts{
<script>


    var purchaseApp = angular.module("purchaseApp", []);
    purchaseApp.controller("purchaseController", function ($scope, $http) {
        $http.get('/Profile/getWish?wish=' + @Model.wish.ToString()).success(function (data) {
            $scope.wishs = data;
            $scope.value = $scope.wishs.filter(function(num){
                return num.Checked == true
            });
            
        });

        
        $scope.updateQuestionValue = function (choice) {
            $scope.value = $scope.value || [];
            if (choice.Checked) {
                $scope.value.push(choice);
                //$scope.value = _.uniq($scope.value);
            } else {
                var index = $scope.value.indexOf(choice);
                $scope.value.splice(index, 1);
                //$scope.value = _.without($scope.value, choice.value);
            }
        };

        

    });
</script>

<script type="text/javascript">
    $(function () {

        $('#country').change(function ()
        {
            // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetRegion")/' + id,
                success: function (data) {
                     
                    // заменяем содержимое присланным частичным представлением
                    $('#region').replaceWith(data);
                }
            });
        });

        $('#region').change(function () {
            // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetCity")/' + id,
                success: function (data) {

                    // заменяем содержимое присланным частичным представлением
                    $('#sity').replaceWith(data);
                }
            });
        })
    })
</script>
}
