@model Ehebruch.Models.SearchProfiles

@{
    Layout = "~/Views/Shared/_LayoutBoot3.cshtml";
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "Search", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <h4>Поиск анкет</h4>
            <br />
            <div class="form-group">
                <div class="col-md-2">
                    <label class="control-label">Ищу:</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.SearchSex, new[]   { new SelectListItem() { Text = "Мужчину", Value = "true" }, 
                            new SelectListItem() { Text = "Женщину", Value = "false" }}, new { @class = "form-control" })  
                    </div>                   
                </div>
                <div class="col-md-2">
                    <label class="control-label">В возрасте от </label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.AgeFrom, new SelectList(Enumerable.Range(18, 99).Select(x => new { Value = x, Text = x }), "Value","Text"), "",
                            new { @class = "form-control input-sm" })   
                    </div>
                 </div>
                   
                <div class="col-md-2">
                    <label class="control-label"> до </label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.AgeFrom, new SelectList(Enumerable.Range(18, 99).Select(x => new { Value = x, Text = x }),"Value","Text"), "",
                            new { @class = "form-control input-sm" })
                    </div>
                </div>


                <div class="col-md-2">
                    <label class="control-label">Рост от </label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.heightFrom, new SelectList(Enumerable.Range(150, 200).Select(x => new { Value = x, Text = x }),"Value", "Text"), "",
                                    new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="col-md-2">
                    <label class="control-label">и до</label>
                    <div class="controls">
                        @Html.DropDownListFor(model => model.heightTo, new SelectList(Enumerable.Range(150, 200).Select(x => new { Value = x, Text = x }),"Value", "Text"), "",
                                    new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.CountryId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(m => m.CountryId, ViewBag.Country as SelectList,"",  new { id = "country", @class = "col-md-2 form-control" })  
                    </div>                   
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(m => m.RegionId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(m => m.RegionId, ViewBag.Region as SelectList, "", new { id = "region", @class = "col-md-2 form-control" })  
                    </div>                   
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(m => m.CityId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(m => m.CityId, ViewBag.City as SelectList, "", new { id = "sity", @class = "col-md-2 form-control" })  
                    </div>                   
                </div>
            </div>
                            
            <div class="form-group">
                <div class="col-md-5">
                    <br />
                    <label class="control-label">Ваши желания: </label>
                    <br />
                    <div class="checkbox">
                        @foreach (KeyValuePair<string, int> c in ViewBag.wishe)
                        {
                            if ((string.IsNullOrEmpty(Model.SearchButton)) || ((Model.wish & c.Value) == c.Value))
                            {
                                <input type="checkbox" name="wishe" value="@c.Value" checked/>@c.Key <br />
                            }
                            else
                            {
                                <input type="checkbox" name="wishe" value="@c.Value" />@c.Key <br />
                            }
                        }
                    </div>
                    <br />
                </div>
              </div>  
            <div class="form-group">
                <div class="col-md-2">
                    <input type="submit" class="btn-group btn-group-justified" value="Поиск" name="SearchButton" />
                </div>
            </div>
            
        
            // Результаты. 

            if (Model.Profiles != null && Model.Profiles.Count() > 0)
            {
            <div class="col-md-6    ">
                <table class="table table-hover">
                @foreach (var prof in Model.Profiles)
                {
                    string path = "~/Files/" + @prof.AvatarPath;
                    string absolutePath = Server.MapPath(path);
                    if (!File.Exists(absolutePath) && (@prof.sex))
                        path = "../../Files/avatars/einman.jpg";
                    else if (!File.Exists(absolutePath) && (!@prof.sex))
                        path = "../../Files/avatars/einefrau.jpg";
                    else
                        path = "../../Files/" + @prof.AvatarPath;
                
                    <tr>
                        <td>
                            <img src="@path" class="img-responsive" style="width: 64px; height: 64px;" />
                        </td>
                        <td>
                            @Html.ActionLink(@prof.UserLogin.nic, "Index", "Profile", new { id = @prof.Id}, null)
                            <br />
                            @if (!String.IsNullOrEmpty(prof.City.Name) || (!String.IsNullOrEmpty(prof.Country.Name)))
                            {
                                <label> @Html.DisplayFor(p => prof.Country.Name) @Html.DisplayFor(p => prof.City.Name)</label>
                            }
                            <br />
                            @if ((prof.Age ?? 0) != 0)
                            {
                                <label>@Html.DisplayFor(p => prof.Age) лет</label>
                            }
                        </td>
                    </tr>
            
                }
            </table>
                </div>
            
            }

        }

    </div>
</div>

@section Scripts{
<script type="text/javascript">
    $(function () {

        $('#country').change(function ()
        {
            // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetRegion")/' + id,
                success: function (data) {
                     
                    // заменяем содержимое присланным частичным представлением
                    $('#region').replaceWith(data);
                }
            });
        });

        $('#region').change(function () {
            // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetCity")/' + id,
                success: function (data) {

                    // заменяем содержимое присланным частичным представлением
                    $('#sity').replaceWith(data);
                }
            });
        })
    })
</script>
}


